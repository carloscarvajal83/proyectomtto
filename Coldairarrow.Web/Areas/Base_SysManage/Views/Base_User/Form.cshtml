@using Coldairarrow.Entity.Base_SysManage;
@using Coldairarrow.Util;
@using Coldairarrow.Business.Base_SysManage;

@{
    Layout = "~/Views/Shared/_Layout_Form.cshtml";

    var obj = (Base_User)Model;
    object roleIds = "[]";
    if (!obj.Id.IsNullOrEmpty())
    {
        roleIds = Html.Raw(Base_UserBusiness.GetUserRoleIds(obj.UserId).ToJson());
    }
    string str = obj.ToJson();
    var objStr = Html.Raw(obj.ToJson());
}
<div style="padding:15px;padding-right:45px;">
    <form id="form" class="form-horizontal" role="form">
        <div class="form-group form-group-sm">
            <label class="col-sm-2 control-label">Usuario</label>
            <div class="col-sm-5">
                <input name="UserName" value="@obj.UserName" type="text" class="form-control" required>
                <div class="help-block with-errors"></div>
            </div>
        </div>
        <div class="form-group form-group-sm">
            <label class="col-sm-2 control-label">Constrasena</label>
            <div class="col-sm-5">
                <input name="Pwd" type="password" class="form-control">
                <div class="help-block with-errors"></div>
            </div>
        </div>
        <div class="form-group form-group-sm">
            <label class="col-sm-2 control-label">Nombre</label>
            <div class="col-sm-5">
                <input name="RealName" value="@obj.RealName" type="text" class="form-control" required>
                <div class="help-block with-errors"></div>
            </div>
        </div>
        <div class="form-group form-group-sm">
            <label class="col-sm-2 control-label">Rol</label>
            <div class="col-sm-5">
                <select id="roleList" class="selectpicker form-control" name="roleList" multiple data-style="btn-default btn-sm"></select>
                <div class="help-block with-errors"></div>
            </div>
        </div>

        <div class="form-group form-group-sm">
            <label class="col-sm-2 control-label">Ubicaciones</label>
            <div class="col-sm-5">
                <select id="plantHList" class="selectpicker form-control" name="plantHList" data-style="btn-default btn-sm" title="Select one"></select>
                <div class="help-block with-errors"></div>
            </div>
        </div>

        <div class="form-group form-group-sm">
            <label class="col-sm-2 control-label">Familias</label>
            <div class="col-sm-5">
                <table id="groupsTable" class="table-bordered"></table>
            </div>
        </div>

        <div class="form-group">
            <button id="submit" type="submit" class="hidden">Enviar</button>
        </div>
    </form>
</div>
<script>
    var theEntity = @objStr;
    var roleIds =@roleIds;
    var $groupsTable = $('#groupsTable');
    var baseId = 0;

    $(function () {
        initEvent();
    });

    //事件绑定
    function initEvent() {
        /*$('#Sex').selectpicker({
            value: theEntity.Sex
        });*/
        /*$('#Birthday').datetimepicker({
            language: 'es',
            minView: 2//日期选择
        });*/
        $('#roleList').selectpicker({
            url: '/Base_SysManage/Base_SysRole/GetDataList_NoPagin',
            value: roleIds,
            valueField: 'RoleId',
            textField: 'RoleName',
            pleaseSelect: false
        });

        $('#plantHList').selectpicker({
            url: '/Mantenimiento/Wtf_Ubicaciones/GetDataList_NoPagin',
            valueField: 'Id',
            textField: 'Nombre',
            pleaseSelect: false
        });
        loadTypesData();
        $('#plantHList').on('changed.bs.select', function (e) {
            // calls on data changed
            baseId = this.value;
            refreshTypesTable();
        });

        //表单校验
        $('#form').validator().on('submit', function (e) {
            //校验成功
            if (!e.isDefaultPrevented()) {
                e.preventDefault();

                var values = $('#form').getValues();
                $.extend(theEntity, values);
                theEntity['Sex'] = "1";
                theEntity['Birthday'] = "2000-01-01";
                theEntity['RoleIdList'] = JSON.stringify(theEntity['roleList'] || []);
                theEntity['IdUbicacion'] = baseId;
                theEntity['ToolTypesList'] = JSON.stringify($groupsTable.bootstrapTable('getSelections') || []);
                loading();
                $.postJSON('/Base_SysManage/Base_User/SaveData', theEntity, function (resJson) {
                    loading(false);

                    if (resJson.Success) {
                        parent.$('#dataTable').bootstrapTable('refresh');
                        parent.dialogSuccess();
                        dialogClose();
                    }
                    else {
                        dialogError(resJson.Msg);
                    }
                });
            }
        })
    }

    function loadTypesData() {
        $groupsTable.bootstrapTable({
            url: '/Mantenimiento/Wtf_TipoHerramienta/GetDataListByUser_NoPagin',
            idField: 'Id',
            pagination: false,
            method: 'post',
            clickToSelect: false,
            height: 220,
            contentType: 'application/x-www-form-urlencoded',
            columns: [
                { title: 'ck', field: 'selected', checkbox: true, width: '10%' },
                { title: 'Control', field: 'Descripcion', width: '80%' },
                { title: 'Admin', field: 'EsAdmin', width: '10%', formatter: "checkBoxEsAdmin", },
                { title: 'Ops', field: 'EsOper', width: '10%', formatter: "checkBoxEsOper", },
            ],
            queryParams: function (params) {
                var searchParams = { IdUbicacion: baseId, IdUsuario: theEntity["UserId"] };
                $.extend(params, searchParams);

                return params;
            },
        });
    }

    function checkBoxEsAdmin(value, row, index) {
        const isChecked = row.EsAdmin ? "checked" : "";
        return '<input type="checkbox" class="chk" data-ID="' + row.Id + '" ' + isChecked + ' onclick="setEsAdmin(event,' + row.Id + ')"/>';
    }

    function checkBoxEsOper(value, row, index) {
        const isChecked = row.EsAdmin ? "checked" : "";
        return '<input type="checkbox" class="chk" data-ID="' + row.Id + '" ' + isChecked + ' onclick="setEsOper(event,' + row.Id + ')"/>';
    }

    function setEsAdmin(event, id) {
        //console.log("click es admin row", event.target.checked, id);
        const index = $groupsTable.bootstrapTable('getSelections').findIndex(obj => {
            return obj.Id == id
        })
        if (index > -1) {
            $groupsTable.bootstrapTable('getSelections')[index].EsAdmin = event.target.checked;
        }
    }

    function setEsOper(event, id) {
        //console.log("click es admin row", event.target.checked, id);
        const index = $groupsTable.bootstrapTable('getSelections').findIndex(obj => {
            return obj.Id == id
        })
        if (index > -1) {
            $groupsTable.bootstrapTable('getSelections')[index].EsOper = event.target.checked;
        }
    }
    
    function refreshTypesTable(){
        $groupsTable.bootstrapTable('refresh', { silent: true });
    }

    //提交表单
    function submitForm() {
        $('#submit').trigger('click');
    }
</script>
